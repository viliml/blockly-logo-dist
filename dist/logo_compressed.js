// Do not edit this file; automatically generated.

/* eslint-disable */
;(function(root, factory) {
  if (typeof define === 'function' && define.amd) { // AMD
    define(["./blockly_compressed.js"], factory);
  } else if (typeof exports === 'object') { // Node.js
    module.exports = factory(require("./blockly_compressed.js"));
  } else { // Browser
    var factoryExports = factory(root.Blockly);
    root.Blockly.Logo = factoryExports.logoGenerator;
    root.Blockly.Logo.__namespace__ = factoryExports.__namespace__;
  }
}(this, function(__parent__) {
var $=__parent__.__namespace__;
/*

 Copyright 2012 Google LLC

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
var module$exports$Blockly$Logo={},module$contents$Blockly$Logo_CodeGenerator=$.CodeGenerator$$module$build$src$core$generator,module$contents$Blockly$Logo_stringUtils=$.module$build$src$core$utils$string;module$exports$Blockly$Logo.logoGenerator=new $.CodeGenerator$$module$build$src$core$generator("Logo");module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC=0;module$exports$Blockly$Logo.logoGenerator.ORDER_UNARY_NEGATION=1;module$exports$Blockly$Logo.logoGenerator.ORDER_MULTIPLICATION=2.1;
module$exports$Blockly$Logo.logoGenerator.ORDER_DIVISION=2.2;module$exports$Blockly$Logo.logoGenerator.ORDER_SUBTRACTION=3.1;module$exports$Blockly$Logo.logoGenerator.ORDER_ADDITION=3.2;module$exports$Blockly$Logo.logoGenerator.ORDER_COMPARISON=4;module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE=5;module$exports$Blockly$Logo.logoGenerator.ORDER_NONE=99;
module$exports$Blockly$Logo.logoGenerator.ORDER_OVERRIDES=[[module$exports$Blockly$Logo.logoGenerator.ORDER_MULTIPLICATION,module$exports$Blockly$Logo.logoGenerator.ORDER_MULTIPLICATION],[module$exports$Blockly$Logo.logoGenerator.ORDER_ADDITION,module$exports$Blockly$Logo.logoGenerator.ORDER_ADDITION]];
module$exports$Blockly$Logo.logoGenerator.init=function(a){module$exports$Blockly$Logo.logoGenerator.definitions_=Object.create(null);module$exports$Blockly$Logo.logoGenerator.functionNames_=Object.create(null);module$exports$Blockly$Logo.logoGenerator.variableDB_?module$exports$Blockly$Logo.logoGenerator.variableDB_.reset():module$exports$Blockly$Logo.logoGenerator.variableDB_=new Blockly.Names(module$exports$Blockly$Logo.logoGenerator.RESERVED_WORDS_);module$exports$Blockly$Logo.logoGenerator.variableDB_.setVariableMap(a.getVariableMap())};
module$exports$Blockly$Logo.logoGenerator.finish=function(a){var b=[],c;for(c in module$exports$Blockly$Logo.logoGenerator.definitions_)b.push(module$exports$Blockly$Logo.logoGenerator.definitions_[c]);delete module$exports$Blockly$Logo.logoGenerator.definitions_;delete module$exports$Blockly$Logo.logoGenerator.functionNames_;module$exports$Blockly$Logo.logoGenerator.variableDB_.reset();return b.join("\n\n")+"\n\n\n"+a};
module$exports$Blockly$Logo.logoGenerator.scrubNakedValue=function(a){return"ignore "+a+"\n"};module$exports$Blockly$Logo.logoGenerator.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/;/g,"\\;").replace(/ /g,"\\ ").replace(/\|/g,"\\|").replace(/~/g,"\\~");return'"'+a};module$exports$Blockly$Logo.logoGenerator.multiline_quote_=function(a){return a.split(/\n/g).map(module$exports$Blockly$Logo.logoGenerator.quote_).join("\\\n")};
module$exports$Blockly$Logo.logoGenerator.scrub_=function(a,b,c){var d="";if(!a.outputConnection||!a.outputConnection.targetConnection){var e=a.getCommentText();e&&(e=$.module$build$src$core$utils$string.wrap(e,module$exports$Blockly$Logo.logoGenerator.COMMENT_WRAP-3),d+=module$exports$Blockly$Logo.logoGenerator.prefixLines(e+"\n","; "));for(var f=0;f<a.inputList.length;f++)a.inputList[f].type==Blockly.INPUT_VALUE&&(e=a.inputList[f].connection.targetBlock())&&(e=module$exports$Blockly$Logo.logoGenerator.allNestedComments(e))&&
(d+=module$exports$Blockly$Logo.logoGenerator.prefixLines(e,"; "))}a=a.nextConnection&&a.nextConnection.targetBlock();c=c?"":module$exports$Blockly$Logo.logoGenerator.blockToCode(a);return d+b+c};
module$exports$Blockly$Logo.logoGenerator.getAdjusted=function(a,b,c,d,e){c=c||0;e=e||module$exports$Blockly$Logo.logoGenerator.ORDER_NONE;a.workspace.options.oneBasedIndex||c++;var f=a.workspace.options.oneBasedIndex?"1":"0";a=0<c?module$exports$Blockly$Logo.logoGenerator.valueToCode(a,b,module$exports$Blockly$Logo.logoGenerator.ORDER_ADDITION)||f:0>c?module$exports$Blockly$Logo.logoGenerator.valueToCode(a,b,module$exports$Blockly$Logo.logoGenerator.ORDER_SUBTRACTION)||f:d?module$exports$Blockly$Logo.logoGenerator.valueToCode(a,
b,module$exports$Blockly$Logo.logoGenerator.ORDER_UNARY_NEGATION)||f:module$exports$Blockly$Logo.logoGenerator.valueToCode(a,b,e)||f;if(Blockly.isNumber(a))a=Number(a)+c,d&&(a=-a);else{if(0<c){a=a+" + "+c;var g=module$exports$Blockly$Logo.logoGenerator.ORDER_ADDITION}else 0>c&&(a=a+" - "+-c,g=module$exports$Blockly$Logo.logoGenerator.ORDER_SUBTRACTION);d&&(a=c?"-("+a+")":"-"+a,g=module$exports$Blockly$Logo.logoGenerator.ORDER_UNARY_NEGATION);g=Math.floor(g);e=Math.floor(e);g&&e>=g&&(a="("+a+")")}return a};var module$exports$Blockly$Logo$colour={};module$exports$Blockly$Logo.logoGenerator.colour_picker=function(a){var b=a.getFieldValue("COLOUR");a=parseInt(b.substring(1,3),16);var c=parseInt(b.substring(3,5),16);b=parseInt(b.substring(5,7),16);return["["+a+" "+c+" "+b+"]",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};module$exports$Blockly$Logo.logoGenerator.colour_random=function(a){return["(list random 256 random 256 random 256)",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};
module$exports$Blockly$Logo.logoGenerator.colour_rgb=function(a){var b=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"RED",module$exports$Blockly$Logo.logoGenerator.ORDER_MULTIPLICATION)||0,c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"GREEN",module$exports$Blockly$Logo.logoGenerator.ORDER_MULTIPLICATION)||0;a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"BLUE",module$exports$Blockly$Logo.logoGenerator.ORDER_MULTIPLICATION)||0;return["(list 2.55 * "+b+" 2.55 * "+
c+" 2.55 * "+a+")",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};var module$exports$Blockly$Logo$lists={};module$exports$Blockly$Logo.logoGenerator.lists_create_empty=function(a){return["[]",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};module$exports$Blockly$Logo.logoGenerator.lists_create_with=function(a){for(var b=Array(a.itemCount_),c=0;c<a.itemCount_;c++)b[c]=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"ADD"+c,module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"null";return["(list "+b.join(" ")+")",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};
module$exports$Blockly$Logo.logoGenerator.lists_repeat=function(a){var b=module$exports$Blockly$Logo.logoGenerator.provideFunction_("listsRepeat",["to "+module$exports$Blockly$Logo.logoGenerator.FUNCTION_NAME_PLACEHOLDER_+" :value :n","  op cascade :n [lput :value ?] []","end"]),c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"ITEM",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"null";a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"NUM",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||
"0";return[b+" "+c+" "+a,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};module$exports$Blockly$Logo.logoGenerator.lists_length=function(a){return["count "+(module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]"),module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.lists_isEmpty=function(a){return["emptyp "+(module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]"),module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.lists_indexOf=function(a){var b="FIRST"==a.getFieldValue("END")?'"true':'"false',c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"FIND",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||'"',d=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]";b=module$exports$Blockly$Logo.logoGenerator.provideFunction_("listsIndexOf",["to "+module$exports$Blockly$Logo.logoGenerator.FUNCTION_NAME_PLACEHOLDER_+
" :item :l :reverse","  ifelse :reverse [",'    localmake "res find [? = :item] reverse :l',"    op ifelse listp :res 0 1 - :res + count :l","  ][",'    localmake "res find [? = :item] :l',"    op ifelse listp :res 0 :res","  ]","end"])+" "+c+" "+d+" "+b;return a.workspace.options.oneBasedIndex?[b,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]:["-1 + "+b,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.lists_getIndex=function(a){var b=a.getFieldValue("MODE")||"GET",c=a.getFieldValue("WHERE")||"FROM_START",d=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]";switch(c){case "FIRST":if("GET"==b)return["first "+d,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE];break;case "LAST":if("GET"==b)return["last "+d,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE];break;case "FROM_START":a=
module$exports$Blockly$Logo.logoGenerator.getAdjusted(a,"AT");if("GET"==b)return["item "+a+" "+d,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE];break;case "RANDOM":if("GET"==b)return["pick "+d,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]}throw Error("Unhandled combination (lists_getIndex).");};
module$exports$Blockly$Logo.logoGenerator.lists_sort=function(a){var b=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"LIST",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]",c=a.getFieldValue("TYPE");a="1"===a.getFieldValue("DIRECTION")?"NUMERIC"===c?'"lessp':'"beforep':"NUMERIC"===c?'"greaterp':"[beforep ?2 ?1]";return[module$exports$Blockly$Logo.logoGenerator.provideFunction_("listsGetSort",["to "+module$exports$Blockly$Logo.logoGenerator.FUNCTION_NAME_PLACEHOLDER_+" :l",'  localmake "cip ifelse definedp "caseignoredp [:caseignoredp] ""true',
'  make "caseignoredp '+("TEXT"===c?'"false':'"true'),'  localmake "res (sort :l '+a+")",'  make "caseignoredp :cip',"  op :res","end"])+" "+b,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};module$exports$Blockly$Logo.logoGenerator.lists_reverse=function(a){return["reverse "+(module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"LIST",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]"),module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};var module$exports$Blockly$Logo$logic={};
module$exports$Blockly$Logo.logoGenerator.controls_ifelse=function(a){var b="";module$exports$Blockly$Logo.logoGenerator.STATEMENT_PREFIX&&(b+=module$exports$Blockly$Logo.logoGenerator.injectId(module$exports$Blockly$Logo.logoGenerator.STATEMENT_PREFIX,a));var c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"IF0",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||'"false';var d=module$exports$Blockly$Logo.logoGenerator.statementToCode(a,"DO0");module$exports$Blockly$Logo.logoGenerator.STATEMENT_SUFFIX&&
(d=module$exports$Blockly$Logo.logoGenerator.prefixLines(module$exports$Blockly$Logo.logoGenerator.injectId(module$exports$Blockly$Logo.logoGenerator.STATEMENT_SUFFIX,a),module$exports$Blockly$Logo.logoGenerator.INDENT)+d);var e=module$exports$Blockly$Logo.logoGenerator.statementToCode(a,"ELSE");module$exports$Blockly$Logo.logoGenerator.STATEMENT_SUFFIX&&(e=module$exports$Blockly$Logo.logoGenerator.prefixLines(module$exports$Blockly$Logo.logoGenerator.injectId(module$exports$Blockly$Logo.logoGenerator.STATEMENT_SUFFIX,
a),module$exports$Blockly$Logo.logoGenerator.INDENT)+e);return b+("ifelse "+c+" [\n"+d+"] [\n"+e+"]\n")};
module$exports$Blockly$Logo.logoGenerator.logic_compare=function(a){var b={EQ:"==",NEQ:"<>",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"A",module$exports$Blockly$Logo.logoGenerator.ORDER_COMPARISON)||"0";a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"B",module$exports$Blockly$Logo.logoGenerator.ORDER_COMPARISON)||"0";return[c+" "+b+" "+a,module$exports$Blockly$Logo.logoGenerator.ORDER_COMPARISON]};
module$exports$Blockly$Logo.logoGenerator.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"and":"or",c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"A",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE);a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"B",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE);var d="and"==b?"true":"false";c||(c=d);a||(a=d);return[b+" "+c+" "+a,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.logic_negate=function(a){return["!"+(module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"BOOL",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"true"),module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};module$exports$Blockly$Logo.logoGenerator.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?'"true':'"false',module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};
module$exports$Blockly$Logo.logoGenerator.logic_null=function(a){return["[]",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};
module$exports$Blockly$Logo.logoGenerator.logic_ternary=function(a){var b=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"IF",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||'"false',c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"THEN",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]";a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"ELSE",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]";return["ifelse "+b+" ["+c+"] ["+a+"]",module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};var module$exports$Blockly$Logo$logo={};module$exports$Blockly$Logo.logoGenerator.logo_move=function(a){var b=a.getFieldValue("OP");a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"AMOUNT",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE);return b.toLowerCase()+" "+a+"\n"};
module$exports$Blockly$Logo.logoGenerator.logo_rotate=function(a){var b=a.getFieldValue("DIRECTION");a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"AMOUNT",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE);return b.toLowerCase()+" "+a+"\n"};module$exports$Blockly$Logo.logoGenerator.logo_circle=function(a){var b=a.getFieldValue("METHOD");a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"R",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE);return b.toLowerCase()+" "+a+"\n"};
module$exports$Blockly$Logo.logoGenerator.logo_pen=function(a){return a.getFieldValue("OP").toLowerCase()+"\n"};module$exports$Blockly$Logo.logoGenerator.logo_setcolor=function(a){var b=a.getFieldValue("WHICH");a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"COLOR",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC);return b.toLowerCase()+" "+a+"\n"};module$exports$Blockly$Logo.logoGenerator.logo_getcolor=function(a){return[a.getFieldValue("WHICH").toLowerCase(),module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.logo_mode=function(a){return a.getFieldValue("WHICH").toLowerCase()+"\n"};module$exports$Blockly$Logo.logoGenerator.logo_screen=function(a){return a.getFieldValue("WHICH").toLowerCase()+"\n"};module$exports$Blockly$Logo.logoGenerator.logo_set=function(a){var b=a.getFieldValue("WHICH");a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE);return b.toLowerCase()+" "+a+"\n"};
module$exports$Blockly$Logo.logoGenerator.logo_get=function(a){return[a.getFieldValue("WHICH").toLowerCase(),module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};var module$exports$Blockly$Logo$loops={};module$exports$Blockly$Logo.logoGenerator.controls_repeat_ext=function(a){var b=a.getField("TIMES")?String(Number(a.getFieldValue("TIMES"))):module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"TIMES",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"0",c=module$exports$Blockly$Logo.logoGenerator.statementToCode(a,"DO");c=module$exports$Blockly$Logo.logoGenerator.addLoopTrap(c,a);return"repeat "+b+" [\n"+c+"]\n"};
module$exports$Blockly$Logo.logoGenerator.controls_repeat=module$exports$Blockly$Logo.logoGenerator.controls_repeat_ext;
module$exports$Blockly$Logo.logoGenerator.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"BOOL",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||'"false',d=module$exports$Blockly$Logo.logoGenerator.statementToCode(a,"DO");d=module$exports$Blockly$Logo.logoGenerator.addLoopTrap(d,a);return(b?"until ":"while ")+c+" [\n"+d+"]\n"};
module$exports$Blockly$Logo.logoGenerator.controls_for=function(a){var b=module$exports$Blockly$Logo.logoGenerator.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"FROM",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"0",d=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"TO",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"0",e=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"BY",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||
"1",f=module$exports$Blockly$Logo.logoGenerator.statementToCode(a,"DO");f=module$exports$Blockly$Logo.logoGenerator.addLoopTrap(f,a);return"for ["+b+" ["+c+"] ["+d+"] ["+e+"]] [\n"+f+"]\n"};
module$exports$Blockly$Logo.logoGenerator.controls_forEach=function(a){var b=module$exports$Blockly$Logo.logoGenerator.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"LIST",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]",d=module$exports$Blockly$Logo.logoGenerator.statementToCode(a,"DO");d=module$exports$Blockly$Logo.logoGenerator.addLoopTrap(d,a);d=module$exports$Blockly$Logo.logoGenerator.INDENT+'make "'+
b+" ?\n"+d;return"foreach "+c+" [\n"+d+"]\n"};var module$exports$Blockly$Logo$math={};module$exports$Blockly$Logo.logoGenerator.math_number=function(a){a=Number(a.getFieldValue("NUM"));return[a,0<=a?module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC:module$exports$Blockly$Logo.logoGenerator.ORDER_UNARY_NEGATION]};
module$exports$Blockly$Logo.logoGenerator.math_arithmetic=function(a){var b={ADD:[" + ",module$exports$Blockly$Logo.logoGenerator.ORDER_ADDITION],MINUS:[" - ",module$exports$Blockly$Logo.logoGenerator.ORDER_SUBTRACTION],MULTIPLY:[" * ",module$exports$Blockly$Logo.logoGenerator.ORDER_MULTIPLICATION],DIVIDE:[" / ",module$exports$Blockly$Logo.logoGenerator.ORDER_DIVISION],POWER:[null,module$exports$Blockly$Logo.logoGenerator.ORDER_NONE]}[a.getFieldValue("OP")],c=b[0];b=b[1];var d=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,
"A",b)||"0";a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"B",b)||"0";return c?[d+c+a,b]:["power "+d+" "+a,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.math_single=function(a){var b=a.getFieldValue("OP");if("NEG"==b)return a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"NUM",module$exports$Blockly$Logo.logoGenerator.ORDER_UNARY_NEGATION)||"0","-"==a[0]&&(a=" "+a),["-"+a,module$exports$Blockly$Logo.logoGenerator.ORDER_UNARY_NEGATION];a="ROUNDUP"==b?Blockly.JavaScript.valueToCode(a,"NUM",Blockly.JavaScript.ORDER_ADDITION)||"0":Blockly.JavaScript.valueToCode(a,"NUM",Blockly.JavaScript.ORDER_NONE)||
"0";switch(b){case "ABS":b="abs "+a;break;case "ROOT":b="sqrt "+a;break;case "LN":b="ln "+a;break;case "EXP":b="exp "+a;break;case "POW10":b="power 10 "+a;break;case "ROUND":b="round "+a;break;case "ROUNDUP":b="round 0.5 + "+a;break;case "ROUNDDOWN":b="int "+a;break;case "SIN":b="sin "+a;break;case "COS":b="cos "+a;break;case "TAN":b="tan "+a;break;case "LOG10":b="log10 "+a;break;case "ASIN":b="arcsin "+a;break;case "ACOS":b="arccos "+a;break;case "ATAN":b="arctan "+a;break;default:throw Error("Unknown math operator: "+
b);}return[b,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};module$exports$Blockly$Logo.logoGenerator.math_constant=function(a){return{PI:["pi",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC],E:["exp 1",module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE],GOLDEN_RATIO:["(1 + sqrt 5) / 2",module$exports$Blockly$Logo.logoGenerator.ORDER_DIVISION],SQRT2:["sqrt 2",module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE],SQRT1_2:["sqrt 1/2",module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]}[a.getFieldValue("CONSTANT")]};
module$exports$Blockly$Logo.logoGenerator.math_number_property=function(a){var b=a.getFieldValue("PROPERTY");if("PRIME"==b)throw Error("Primality testing isn't supported yet");var c="POSITIVE"==b||"NEGATIVE"==b?module$exports$Blockly$Logo.logoGenerator.ORDER_COMPARISON:module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE;var d=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"NUMBER_TO_CHECK","POSITIVE"==b||"NEGATIVE"==b?module$exports$Blockly$Logo.logoGenerator.ORDER_COMPARISON:module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||
"0";switch(b){case "EVEN":var e="0 == modulo "+d+" 2";break;case "ODD":e="1 == modulo "+d+" 2";break;case "WHOLE":e="0 == modulo "+d+" 1";break;case "POSITIVE":e=d+" > 0";break;case "NEGATIVE":e=d+" < 0";break;case "DIVISIBLE_BY":a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"DIVISOR",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"0",e=d+" % "+a+" == 0"}return[e,c]};
module$exports$Blockly$Logo.logoGenerator.math_change=function(a){var b=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"DELTA",module$exports$Blockly$Logo.logoGenerator.ORDER_ADDITION)||"0";a=module$exports$Blockly$Logo.logoGenerator.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);return'make "'+a+" (ifelse numberp :"+a+" :"+a+" 0) + "+b+"\n"};module$exports$Blockly$Logo.logoGenerator.math_round=module$exports$Blockly$Logo.logoGenerator.math_single;
module$exports$Blockly$Logo.logoGenerator.math_trig=module$exports$Blockly$Logo.logoGenerator.math_single;module$exports$Blockly$Logo.logoGenerator.math_modulo=function(a){var b=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"DIVIDEND",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"0";a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"DIVISOR",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"0";return["modulo "+b+" "+a,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.math_random_int=function(a){var b=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"FROM",module$exports$Blockly$Logo.logoGenerator.ORDER_SUBTRACTION)||"0";a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"TO",module$exports$Blockly$Logo.logoGenerator.ORDER_SUBTRACTION)||"0";return[b+" + random "+a+" - "+b+" + 1",module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.math_atan2=function(a){var b=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"X",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"0";a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"Y",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"0";return["(arctan "+b+" "+a+")",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};var module$exports$Blockly$Logo$procedures={};
module$exports$Blockly$Logo.logoGenerator.procedures_defreturn=function(a){var b=module$exports$Blockly$Logo.logoGenerator.variableDB_.getName(a.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),c="";module$exports$Blockly$Logo.logoGenerator.STATEMENT_PREFIX&&(c+=module$exports$Blockly$Logo.logoGenerator.injectId(module$exports$Blockly$Logo.logoGenerator.STATEMENT_PREFIX,a));module$exports$Blockly$Logo.logoGenerator.STATEMENT_SUFFIX&&(c+=module$exports$Blockly$Logo.logoGenerator.injectId(module$exports$Blockly$Logo.logoGenerator.STATEMENT_SUFFIX,a));
c&&(c=module$exports$Blockly$Logo.logoGenerator.prefixLines(c,module$exports$Blockly$Logo.logoGenerator.INDENT));var d="";module$exports$Blockly$Logo.logoGenerator.INFINITE_LOOP_TRAP&&(d=module$exports$Blockly$Logo.logoGenerator.prefixLines(module$exports$Blockly$Logo.logoGenerator.injectId(module$exports$Blockly$Logo.logoGenerator.INFINITE_LOOP_TRAP,a),module$exports$Blockly$Logo.logoGenerator.INDENT));var e=module$exports$Blockly$Logo.logoGenerator.statementToCode(a,"STACK"),f=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,
"RETURN",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"",g="";e&&f&&(g=c);f&&(f=module$exports$Blockly$Logo.logoGenerator.INDENT+"op "+f+"\n");for(var h=[],k=0;k<a.arguments_.length;k++)h[k]=module$exports$Blockly$Logo.logoGenerator.variableDB_.getName(a.arguments_[k],Blockly.VARIABLE_CATEGORY_NAME);(h=h.join(" :"))&&(h=" :"+h);a=module$exports$Blockly$Logo.logoGenerator.scrub_(a,"to "+b+h+"\n"+c+d+e+g+f+"end");module$exports$Blockly$Logo.logoGenerator.definitions_["%"+b]=a;return null};
module$exports$Blockly$Logo.logoGenerator.procedures_defnoreturn=module$exports$Blockly$Logo.logoGenerator.procedures_defreturn;
module$exports$Blockly$Logo.logoGenerator.procedures_callreturn=function(a){for(var b=module$exports$Blockly$Logo.logoGenerator.variableDB_.getName(a.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),c=[],d=0;d<a.arguments_.length;d++)c[d]=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"ARG"+d,module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]";return[b+" "+c.join(" "),module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.procedures_callnoreturn=function(a){return module$exports$Blockly$Logo.logoGenerator.procedures_callreturn(a)[0]+"\n"};
module$exports$Blockly$Logo.logoGenerator.procedures_ifreturn=function(a){var b="if "+(module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"CONDITION",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"false")+" [\n";module$exports$Blockly$Logo.logoGenerator.STATEMENT_SUFFIX&&(b+=module$exports$Blockly$Logo.logoGenerator.prefixLines(module$exports$Blockly$Logo.logoGenerator.injectId(module$exports$Blockly$Logo.logoGenerator.STATEMENT_SUFFIX,a),module$exports$Blockly$Logo.logoGenerator.INDENT));
a.hasReturnValue_?(a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"[]",b+=module$exports$Blockly$Logo.logoGenerator.INDENT+"op "+a+"\n"):b+=module$exports$Blockly$Logo.logoGenerator.INDENT+"stop\n";return b+"]\n"};var module$exports$Blockly$Logo$texts={};module$exports$Blockly$Logo.logoGenerator.text=function(a){return[module$exports$Blockly$Logo.logoGenerator.quote_(a.getFieldValue("TEXT")),module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};module$exports$Blockly$Logo.logoGenerator.text_multiline=function(a){a=module$exports$Blockly$Logo.logoGenerator.multiline_quote_(a.getFieldValue("TEXT"));a.includes("\n")&&(a="("+a+")");return[a,module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};
module$exports$Blockly$Logo.logoGenerator.text_join=function(a){switch(a.itemCount_){case 0:return['"',module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC];case 2:var b=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"ADD0",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC)||'"';a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"ADD1",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||'"';return["word "+b+" "+a,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE];
default:const c=Array(a.itemCount_);for(b=0;b<a.itemCount_;b++)c[b]=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"ADD"+b,module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||'"';return["(word "+c.join(" ")+")",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]}};
module$exports$Blockly$Logo.logoGenerator.text_append=function(a){var b=module$exports$Blockly$Logo.logoGenerator.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"TEXT",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||'"';return'make "'+b+" word :"+b+" "+a+"\n"};
module$exports$Blockly$Logo.logoGenerator.text_length=function(a){return["count "+(module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"''"),module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};module$exports$Blockly$Logo.logoGenerator.text_isEmpty=function(a){return["emptyp "+(module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"''"),module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};
module$exports$Blockly$Logo.logoGenerator.text_charAt=function(a){const b=a.getFieldValue("WHERE")||"FROM_START",c=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE","FROM_END"===b?Blockly.JavaScript.ORDER_SUBTRACTION:Blockly.JavaScript.ORDER_NONE)||"''";switch(b){case "FIRST":return["first "+c,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE];case "LAST":return["last "+c,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE];case "FROM_START":return["item "+module$exports$Blockly$Logo.logoGenerator.getAdjusted(a,
"AT")+" "+c,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE];case "FROM_END":return a=module$exports$Blockly$Logo.logoGenerator.getAdjusted(a,"AT",-1,!0),[module$exports$Blockly$Logo.logoGenerator.provideFunction_("wordLetterFromEnd",["to "+module$exports$Blockly$Logo.logoGenerator.FUNCTION_NAME_PLACEHOLDER_+" :w :a","op item :a + count :w :w","end"])+" "+c+" "+a,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE];case "RANDOM":return["pick "+c,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]}throw Error("Unhandled option (text_charAt).");
};
module$exports$Blockly$Logo.logoGenerator.text_changeCase=function(a){const b={UPPERCASE:"uppercase ",LOWERCASE:"lowercase ",TITLECASE:null}[a.getFieldValue("CASE")];a=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"TEXT",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||'"';return[b?b+a:module$exports$Blockly$Logo.logoGenerator.provideFunction_("textToTitleCase",["to "+module$exports$Blockly$Logo.logoGenerator.FUNCTION_NAME_PLACEHOLDER_+" :w",'op map [ifelse #>1 [ifelse "\\  = item #-1 :w [uppercase ?] [lowercase ?]][uppercase ?]] :w',"end"])+
" "+a,module$exports$Blockly$Logo.logoGenerator.ORDER_PROCEDURE]};module$exports$Blockly$Logo.logoGenerator.text_print=function(a){return"pr "+(module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"TEXT",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||'"')+"\n"};
module$exports$Blockly$Logo.logoGenerator.text_prompt_ext=function(a){a=a.getField("TEXT")?module$exports$Blockly$Logo.logoGenerator.quote_(a.getFieldValue("TEXT")):module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"TEXT",module$exports$Blockly$Logo.logoGenerator.ORDER_NONE)||"''";return["readword "+a+" "+a,module$exports$Blockly$Logo.logoGenerator.ORDER_NONE]};module$exports$Blockly$Logo.logoGenerator.text_prompt=module$exports$Blockly$Logo.logoGenerator.text_prompt_ext;var module$exports$Blockly$Logo$variables={};module$exports$Blockly$Logo.logoGenerator.variables_get=function(a){return[":"+module$exports$Blockly$Logo.logoGenerator.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC]};
module$exports$Blockly$Logo.logoGenerator.variables_set=function(a){var b=module$exports$Blockly$Logo.logoGenerator.valueToCode(a,"VALUE",module$exports$Blockly$Logo.logoGenerator.ORDER_ATOMIC)||"0";a=module$exports$Blockly$Logo.logoGenerator.variableDB_.getName(a.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);return"make "+module$exports$Blockly$Logo.logoGenerator.quote_(a)+" "+b+"\n"};var module$exports$Blockly$Logo$variablesDynamic={};module$exports$Blockly$Logo.logoGenerator.variables_get_dynamic=module$exports$Blockly$Logo.logoGenerator.variables_get;module$exports$Blockly$Logo.logoGenerator.variables_set_dynamic=module$exports$Blockly$Logo.logoGenerator.variables_set;var module$exports$Blockly$Logo$all=module$exports$Blockly$Logo;
module$exports$Blockly$Logo.__namespace__=$;
return module$exports$Blockly$Logo;
}));


//# sourceMappingURL=logo_compressed.js.map
